name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies 
        run: |
          npm install
          cd ../client && npm install
      - name: Check style
        run: npm run lint
      - name: npm run build:ui
        run: npm run build:ui
      - name: npm run test
        run: npm run test
      - name: e2e tests
        uses: cypress-io/github-action@v5
        with:
          command: npm run test:e2e
          start: npm run start
          wait-on: http://localhost:3001
      - name: Build Success
        uses: rjstone/discord-webhook-notify@v1
        if: success()
        with:
          severity: info
          details: Build Successful
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Build Failed
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
          severity: error
          details: Build Failed
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
  tag_release:
    needs: simple_deployment_pipeline
    if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#skip') }}
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@8c8163ef62cf9c4677c8e800f36270af27930f42
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don't want to set write permissions use a PAT token
        WITH_V: false
        DEFAULT_BUMP: patch
  deploy:
    name: Deploy to FlyIO
    runs-on: ubuntu-latest
    needs: simple_deployment_pipeline
    if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#skip') }}
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}